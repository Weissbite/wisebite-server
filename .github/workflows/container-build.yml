name: Container Image Build CI

on:
  push:
    branches:
      - main
      - deploy-*
    tags:
      - v*.*.*

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GCP_PROJECT_ID: wisebite-app
  GCP_ARTIFACT_REGISTRY: core
  GCP_ARTIFACT_REGISTRY_LOCATION: europe-west1

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image_name: [
          "frontend",
          "backend"
        ]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        version: v0.6.0
        buildkitd-flags: --debug

    - name: 'Authenticate to Google Cloud'
      id: 'auth'
      uses: 'google-github-actions/auth@v0.6.0'
      with:
        credentials_json: '${{ secrets.WISEBITE_SERVER_SA_GITHUB_ACTIONS }}'
        token_format: 'access_token'

    - name: 'Docker login'
      id: docker
      uses: 'docker/login-action@v1'
      with:
        registry: '${{ env.GCP_ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev'
        username: 'oauth2accesstoken'
        password: '${{ steps.auth.outputs.access_token }}'


    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ env.CONTAINER_REGISTRY }}/${{ matrix.image_name }}
        tags: |
          type=semver,pattern={{version}}
          type=ref,event=pr
          type=ref,event=branch
          type=sha,format=long

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        file: ${{ matrix.image_name == 'frontend' && 'Dockerfile.frontend' || 'Dockerfile' }}
        cache-from: type=registry,ref=${{ env.GCP_ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REGISTRY }}/${{ matrix.image_name }}:buildcache
        cache-to: type=registry,ref=${{ env.GCP_ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REGISTRY }}/${{ matrix.image_name }}:buildcache,mode=max
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
